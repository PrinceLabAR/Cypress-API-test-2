{
	"info": {
		"_postman_id": "c9f714e6-13f7-4fc0-a9c0-ca69c9bb31cd",
		"name": "Fake Store Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "30993330"
	},
	"item": [
		{
			"name": "Get all products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//JSON Schema validation\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
							"  \"title\": \"Generated schema for Root\",\r",
							"  \"type\": \"array\",\r",
							"  \"items\": {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"      \"id\": {\r",
							"        \"type\": \"number\"\r",
							"      },\r",
							"      \"title\": {\r",
							"        \"type\": \"string\"\r",
							"      },\r",
							"      \"price\": {\r",
							"        \"type\": \"number\"\r",
							"      },\r",
							"      \"description\": {\r",
							"        \"type\": \"string\"\r",
							"      },\r",
							"      \"category\": {\r",
							"        \"type\": \"string\"\r",
							"      },\r",
							"      \"image\": {\r",
							"        \"type\": \"string\"\r",
							"      },\r",
							"      \"rating\": {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"          \"rate\": {\r",
							"            \"type\": \"number\"\r",
							"          },\r",
							"          \"count\": {\r",
							"            \"type\": \"number\"\r",
							"          }\r",
							"        },\r",
							"        \"required\": [\r",
							"          \"rate\",\r",
							"          \"count\"\r",
							"        ]\r",
							"      }\r",
							"    },\r",
							"    \"required\": [\r",
							"      \"id\",\r",
							"      \"title\",\r",
							"      \"price\",\r",
							"      \"description\",\r",
							"      \"category\",\r",
							"      \"image\",\r",
							"      \"rating\"\r",
							"    ]\r",
							"  }\r",
							"}\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Schema is valid', function (){\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://fakestoreapi.com/products"
			},
			"response": []
		},
		{
			"name": "Limit Results",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakestoreapi.com/products?limit=5",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products"
					],
					"query": [
						{
							"key": "limit",
							"value": "5"
						}
					]
				}
			},
			"response": []
		}
	]
}